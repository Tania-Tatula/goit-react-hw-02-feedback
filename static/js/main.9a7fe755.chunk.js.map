{"version":3,"sources":["components/Feedback/Feedback.module.css","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/Notification.js","components/Feedback/Feedback.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","title","info","FeedbackOptions","handleGoodFeedback","handleNeutralFeedback","handleBadFeedback","button","onClick","Notification","message","Feedback","state","setState","prevState","this","countTotalFeedback","toFixed","feedbackBlock","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,MAAQ,wBAAwB,OAAS,yBAAyB,KAAO,yB,sLCa5HC,EAXI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAIC,UAAWC,IAAOC,MAAtB,wBACA,uBAAMF,UAAWC,IAAOE,KAAxB,kBAAoCR,KACpC,uBAAMK,UAAWC,IAAOE,KAAxB,qBAAuCP,KACvC,uBAAMI,UAAWC,IAAOE,KAAxB,iBAAmCN,KACnC,uBAAMG,UAAWC,IAAOE,KAAxB,mBAAqCL,KACrC,uBAAME,UAAWC,IAAOE,KAAxB,+BAAiDJ,EAAjD,WCUWK,EAjBS,SAAC,GAAD,IACtBC,EADsB,EACtBA,mBACAC,EAFsB,EAEtBA,sBACAC,EAHsB,EAGtBA,kBAHsB,OAKtB,qCACE,wBAAQP,UAAWC,IAAOO,OAAQC,QAASJ,EAA3C,kBAGA,wBAAQL,UAAWC,IAAOO,OAAQC,QAASH,EAA3C,qBAGA,wBAAQN,UAAWC,IAAOO,OAAQC,QAASF,EAA3C,qBCNWG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,oBAAIX,UAAWC,IAAOC,MAAtB,SAA8BS,OC8DnBC,E,4MA5DbC,MAAQ,CACNlB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,WACnB,EAAKS,UAAS,SAACC,GAAD,MAAgB,CAC5BpB,KAAMoB,EAAUpB,KAAO,O,EAG3BW,sBAAwB,WACtB,EAAKQ,UAAS,SAACC,GAAD,MAAgB,CAC5BnB,QAASmB,EAAUnB,QAAU,O,EAGjCW,kBAAoB,WAClB,EAAKO,UAAS,SAACC,GAAD,MAAgB,CAC5BlB,IAAKkB,EAAUlB,IAAM,O,wDAIzB,WAEE,OADYmB,KAAKH,MAAMlB,KAAOqB,KAAKH,MAAMjB,QAAUoB,KAAKH,MAAMhB,M,6CAIhE,WACE,IAAIC,EAAQkB,KAAKC,qBAEjB,OAD2C,IAAlBD,KAAKH,MAAMlB,KAAcG,GAAOoB,Y,oBAI3D,WACE,OACE,sBAAKlB,UAAWC,IAAOkB,cAAvB,UACE,oBAAInB,UAAWC,IAAOC,MAAtB,mCAEA,cAAC,EAAD,CACEG,mBAAoBW,KAAKX,mBACzBC,sBAAuBU,KAAKV,sBAC5BC,kBAAmBS,KAAKT,oBAGK,IAA9BS,KAAKC,qBACJ,cAAC,EAAD,CAAcN,QAAQ,sBAEtB,cAAC,EAAD,CACEhB,KAAMqB,KAAKH,MAAMlB,KACjBC,QAASoB,KAAKH,MAAMjB,QACpBC,IAAKmB,KAAKH,MAAMhB,IAChBC,MAAOkB,KAAKC,qBACZlB,mBAAoBiB,KAAKI,2C,GArDdC,aCKRC,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCDNuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9a7fe755.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBlock\":\"Feedback_feedbackBlock__qgn_k\",\"title\":\"Feedback_title__11yKQ\",\"button\":\"Feedback_button__3OZ33\",\"info\":\"Feedback_info__2tFs4\"};","import React from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2 className={styles.title}>Statistics</h2>\r\n    <span className={styles.info}>Good:{good}</span>\r\n    <span className={styles.info}>Neutral:{neutral}</span>\r\n    <span className={styles.info}>Bad:{bad}</span>\r\n    <span className={styles.info}>Total:{total}</span>\r\n    <span className={styles.info}>Positive feedback:{positivePercentage}%</span>\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst FeedbackOptions = ({\r\n  handleGoodFeedback,\r\n  handleNeutralFeedback,\r\n  handleBadFeedback,\r\n}) => (\r\n  <>\r\n    <button className={styles.button} onClick={handleGoodFeedback}>\r\n      Good\r\n    </button>\r\n    <button className={styles.button} onClick={handleNeutralFeedback}>\r\n      Neutral\r\n    </button>\r\n    <button className={styles.button} onClick={handleBadFeedback}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <h2 className={styles.title}>{message}</h2>\r\n  </>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Feedback.module.css\";\r\nimport Statistics from \"./Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Notification from \"./Notification\";\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGoodFeedback = () => {\r\n    this.setState((prevState) => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n  handleNeutralFeedback = () => {\r\n    this.setState((prevState) => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n  handleBadFeedback = () => {\r\n    this.setState((prevState) => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    let total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    let total = this.countTotalFeedback();\r\n    let positiveFeedback = ((this.state.good * 100) / total).toFixed();\r\n    return positiveFeedback;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.feedbackBlock}>\r\n        <h1 className={styles.title}>Please leave feedback</h1>\r\n\r\n        <FeedbackOptions\r\n          handleGoodFeedback={this.handleGoodFeedback}\r\n          handleNeutralFeedback={this.handleNeutralFeedback}\r\n          handleBadFeedback={this.handleBadFeedback}\r\n        />\r\n\r\n        {this.countTotalFeedback() === 0 ? (\r\n          <Notification message='No feedback given' />\r\n        ) : (\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import \"./App.css\";\nimport Feedback from \"./components/Feedback\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}